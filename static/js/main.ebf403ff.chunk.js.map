{"version":3,"sources":["app/square/index.js","app/board/index.js","utils/getShips.js","app/ui/index.js","app/index.js","utils/getVerticalNames.js","utils/getHorizontalNames.js","utils/getSquares.js","serviceWorker.js","index.js"],"names":["square","isShip","style","width","height","border","backgroundColor","squares","ships","verticals","horizontals","margin","display","gridTemplateColumns","map","name","key","textAlign","Number","some","ship","i","vectors","revers","reversIndex","squareFillOccupied","squareIndex","occupied","forEach","index","o","push","shipFillOccupied","length","getReversVector","vector","getVectorSquare","getSquare","shift","indexMatch","String","checkIsWrongIndex","Math","floor","random","buildShip","long","isReversChanged","num","concat","React","useState","getShips","setShips","paddingTop","cursor","fontSize","outline","onClick","arr","getVerticalNames","getHorizontalNames","v","h","getSquares","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ebf403ff.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default ({ square, isShip }) => {\r\n  return (\r\n    <div style={{\r\n      width: 20,\r\n      height: 20,\r\n      border: '1px solid gray',\r\n      backgroundColor: isShip ? '#000' : '#ccc',\r\n    }}>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport Square from '../square';\r\n\r\nexport default ({ squares, ships, verticals, horizontals }) => {\r\n\r\n  return (\r\n    <div style={{ margin: 'auto', width: 264 }}>\r\n\r\n      <div style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(11, 22px)',\r\n      }}>\r\n        <span></span>\r\n\r\n        {horizontals.map(name => (\r\n          <div\r\n            key={name}\r\n            style={{\r\n              width: 22,\r\n              height: 22,\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            {name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: '22px auto',\r\n      }}>\r\n        <div>\r\n          {verticals.map(name => (\r\n            <div\r\n              key={name}\r\n              style={{\r\n                width: 22,\r\n                height: 22,\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              {Number(name) + 1}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: 'repeat(10, 22px)',\r\n        }}>\r\n          {squares.map(square => (\r\n            <Square\r\n              key={square.name}\r\n              square={square}\r\n              isShip={ships.some(ship => ship === square.i)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","const vectors = ['up', 'right', 'down', 'left'];\r\nlet revers = false;\r\nlet reversIndex = 0;\r\n\r\nconst squareFillOccupied = (squareIndex, occupied) => {\r\n\r\n  [-11, -10, -9, -1, 0, 1, 9, 10, 11].forEach(index => {\r\n    index += squareIndex;\r\n\r\n    if (index < 0 || index > 99 || occupied.some(o => o === index)) return;\r\n    occupied.push(index);\r\n  });\r\n};\r\n\r\nconst shipFillOccupied = (ship, occupied) => {\r\n  for (let i = 0; i < ship.length; i++) {\r\n    squareFillOccupied(ship[i], occupied);\r\n  }\r\n};\r\n\r\nconst checkIsWrongIndex = (occupied, index, indexMatch) => {\r\n  return (\r\n    index < 0 ||\r\n    index > 99 ||\r\n    occupied.some(o => o === index) ||\r\n    String(index)[1] === String(indexMatch)\r\n  );\r\n};\r\n\r\nconst getReversVector = vector => {\r\n  if (vector === vectors[0]) return vectors[2];\r\n  if (vector === vectors[1]) return vectors[3];\r\n  if (vector === vectors[2]) return vectors[0];\r\n  if (vector === vectors[3]) return vectors[1];\r\n};\r\n\r\nconst getVectorSquare = (getSquare, occupied, vector, ship, shift, indexMatch) => {\r\n  let index;\r\n\r\n  if (revers) {\r\n    index = ship[reversIndex] + shift;\r\n    reversIndex = ship.length;\r\n\r\n  } else {\r\n    index = ship[ship.length - 1] + shift;\r\n  }\r\n\r\n  if (checkIsWrongIndex(occupied, index, indexMatch)) {\r\n    if (revers) return false;\r\n\r\n    revers = true;\r\n    vector = getReversVector(vector);\r\n    return getSquare(occupied, vector, ship);\r\n\r\n  } else {\r\n    return index;\r\n  };\r\n};\r\n\r\nconst getSquare = (occupied, vector, ship = []) => {\r\n  if (!ship.length) {\r\n    let square = Math.floor(Math.random() * 100);\r\n\r\n    if (occupied.some(o => o === square)) {\r\n      square = getSquare(occupied);\r\n    }\r\n    return square;\r\n  }\r\n\r\n  switch (vector) {\r\n    case vectors[0]:\r\n      return getVectorSquare(getSquare, occupied, vector, ship, -10);\r\n\r\n    case vectors[1]:\r\n      return getVectorSquare(getSquare, occupied, vector, ship, 1, 0);\r\n\r\n    case vectors[2]:\r\n      return getVectorSquare(getSquare, occupied, vector, ship, 10);\r\n\r\n    case vectors[3]:\r\n      return getVectorSquare(getSquare, occupied, vector, ship, -1, 9);\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst buildShip = (long, squares, occupied) => {\r\n  let ship = [];\r\n  let vector = vectors[Math.floor(Math.random() * 4)];\r\n  let isReversChanged = false;\r\n\r\n  for (let i = 0; i < long; i++) {\r\n\r\n    vector = (revers && !isReversChanged) ? getReversVector(vector) : vector;\r\n    isReversChanged = revers ? true : false;\r\n    ship[i] = getSquare(occupied, vector, ship);\r\n\r\n    if (ship[i] === false) {\r\n      revers = false;\r\n      reversIndex = 0;\r\n      ship = buildShip(long, squares, occupied);\r\n      break;\r\n    }\r\n  }\r\n  revers = false;\r\n  reversIndex = 0;\r\n\r\n  return ship;\r\n};\r\n\r\nexport default squares => {\r\n  let ships = [];\r\n  const occupied = [];\r\n\r\n  for (let long = 4, num = 1; long > 0; long--, num++) {\r\n    for (let i = 0; i < num; i++) {\r\n\r\n      let ship = buildShip(long, squares, occupied);\r\n      ships = ships.concat(ship);\r\n      shipFillOccupied(ship, occupied);\r\n    }\r\n  }\r\n  return ships;\r\n};","import React from 'react';\r\nimport Board from '../board';\r\nimport getShips from '../../utils/getShips';\r\n\r\nexport default ({ squares, verticals, horizontals }) => {\r\n  let [ships, setShips] = React.useState(getShips());\r\n\r\n  const handleUpdate = () => {\r\n    setShips(getShips());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Board squares={squares} ships={ships} verticals={verticals} horizontals={horizontals} />\r\n\r\n      <div style={{\r\n        margin: 'auto',\r\n        paddingTop: 20,\r\n        width: 220,\r\n      }}>\r\n        <button style={{\r\n          cursor: 'pointer',\r\n          fontSize: 18,\r\n          backgroundColor: '#ddd',\r\n          outline: 0,\r\n          border: '1px solid #000',\r\n        }} onClick={handleUpdate}>get new random battleships</button>\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport UI from './ui';\r\n\r\nimport getVerticalNames from '../utils/getVerticalNames';\r\nimport getHorizontalNames from '../utils/getHorizontalNames';\r\nimport getSquares from '../utils/getSquares';\r\n\r\nexport default () => {\r\n  const verticals = getVerticalNames();\r\n  const horizontals = getHorizontalNames();\r\n  const squares = getSquares(verticals, horizontals);\r\n\r\n  return (\r\n    <>\r\n      <UI squares={squares} verticals={verticals} horizontals={horizontals} />\r\n    </>\r\n  );\r\n};","export default () => {\r\n  const str = '0123456789';\r\n  const arr = [];\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    arr.push(str[i]);\r\n  }\r\n\r\n  return arr;\r\n};","export default () => {\r\n  const str = 'abcdefghij';\r\n  const arr = [];\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    arr.push(str[i]);\r\n  }\r\n\r\n  return arr;\r\n};","export default (verticals, horizontals) => {\r\n  let arr = [];\r\n\r\n  for (let v = 0; v < 10; v++) {\r\n    for (let h = 0; h < 10; h++) {\r\n\r\n      let square = {\r\n        i: arr.length,\r\n        name: horizontals[h] + verticals[v],\r\n      };\r\n      arr.push(square);\r\n    }\r\n  }\r\n\r\n  return arr;\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}